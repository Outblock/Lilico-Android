name: Android CI

on:
  push:
    tags:
      - r*
    #branches: [ master ]
  pull_request:
    tags:
      - r*
    #branches: [ master ]
    
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
#     - name: Config git
#       run: git config --global --add url."git@github.com:".insteadOf "https://github.com/"
    - name: Checkout
      uses: actions/checkout@v2
      with:
        # https://github.com/actions/checkout/issues/116#issuecomment-644419389
        # MY_REPO_PAT: 
        token: ${{ secrets.LILICO_MY_REPO_PAT }}
        submodules: recursive
    - name: set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu' # See 'Supported distributions' for available options
        java-version: '11'  
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build bundle
      run: ./gradlew -PvCode=${{github.run_number+50}} -PvName=${GITHUB_REF##*/} build bundleRelease
    
    - name: Prepare Release
      id: prepare_release
      run: |
        # APK_PATH=`find . -name '*.apk' | grep release`
        # echo $APK_PATH
        # echo "::set-output name=apk_path::$APK_PATH"
        # APK_NAME=`basename $APK_PATH`
        echo "::set-output name=apk_name::$APK_NAME"
        # mapping 只对 bundle 有效
        # MAPPING_PATH=`find . -name 'mapping.txt' | grep app`
        # echo $MAPPING_PATH
        # echo "::set-output name=mapping_path::$MAPPING_PATH"
        BUNDLE_PATH=`find . -name '*.aab' | grep -v intermediates`
        echo ::set-output name=bundle_path::$BUNDLE_PATH
        BUNDLE_NAME=`basename $BUNDLE_PATH`
        echo ::set-output name=bundle_name::$BUNDLE_NAME

    #Uploads
    - name: Upload Bundle Artifact
      if: steps.prepare_release.outputs.bundle_path
      uses: actions/upload-artifact@v1
      with:
        name: bundle-upload
        path: ${{steps.prepare_release.outputs.bundle_path}}

    - name: Create GitHub release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.LILICO_MY_REPO_PAT }}
      with:
        tag_name: build-${{ github.ref }}-${{github.run_number}}
        release_name: ${{ github.ref }} ${{github.run_number}}
        body: |
          # Changelog
          Release type: ${{ steps.buildnumber.outputs.build_number }}
        prerelease: false

    - name: Upload Bundle Asset
      if: steps.create_release.outputs.upload_url && steps.prepare_release.outputs.bundle_path && steps.prepare_release.outputs.bundle_name
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.LILICO_MY_REPO_PAT}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ${{steps.prepare_release.outputs.bundle_path}}
        asset_name: ${{steps.prepare_release.outputs.bundle_name}}
        asset_content_type: application/octet-stream
        
    - name: Upload to Google Play
      uses: r0adkll/upload-google-play@v1.0.15
      with:
        serviceAccountJsonPlainText: ${{ secrets.LILICO_SERVICE_ACCOUNT_JSON }}
        packageName: io.outblock.lilico
        releaseFiles: ${{steps.prepare_release.outputs.bundle_path}}
        # alpha, beta, internal, production, internalsharing
        track: internalsharing
        # Google Play 使用 0 到 5 之间的整数值来确定优先级，其中 0 是默认值，5 代表最高优先级。
        # https://developer.android.com/guide/playcore/in-app-updates/kotlin-java
        inAppUpdatePriority: 1
        # 发布百分比, 不设置为 100% 发布
        # userFraction: 0.9
        # 更新内容
        # whatsNewDirectory: distribution/whatsnew
        mappingFile: ${{steps.prepare_release.outputs.mapping_path}}
